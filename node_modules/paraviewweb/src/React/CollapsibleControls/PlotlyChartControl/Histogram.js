import React                    from 'react';
import style from 'PVWStyle/ReactWidgets/PlotlySelectionWidgets.mcss';
import Select from 'react-select';
import 'react-select/dist/react-select.css';

const PlotlyHistogramWidget = (props) => {
  function handleChange(event) {
    const newXArray = event.value; //event.target.value;
    const forceNewPlot = props.arrays[props.chartState.x] !== props.arrays[newXArray];
    props.onChange({
      chartType: 'Histogram',
      x: newXArray,
      forceNewPlot,
    });
  }


        // <Select ref="stateSelect" autofocus options={options} simpleValue 
        // clearable={this.state.clearable} name="selected-state" 
        // disabled={this.state.disabled} value={this.state.selectValue} 
        // onChange={this.updateValue} searchable={this.state.searchable} />


              // <select className={style.fullWidth} onChange={handleChange} value={props.chartState.x}>
              //   {Object.keys(props.arrays).map(arrayName => <option value={arrayName} key={arrayName}>{arrayName}</option>)}
              // </select>
  return (
    <div>
      <table className={style.fullWidth}>
        <tbody>
          <tr>
            <td className={style.label}>x</td>
            <td className={style.fullWidth}>

              <Select className={style.fullWidth}
                  clearable="false"
                  value={props.chartState.x}
                  options={Object.keys(props.arrays).map(name => {return {value: name, label: name};} )}
                  onChange={handleChange}
              />


            </td>
          </tr>
        </tbody>
      </table>
    </div>
  );
};

PlotlyHistogramWidget.propTypes = {
  chartState: React.PropTypes.object,
  arrays: React.PropTypes.object,
  onChange: React.PropTypes.func,
};

PlotlyHistogramWidget.defaultProps = {
  chartState: {},
  arrays: {},
  onChange: () => {},
};

export default PlotlyHistogramWidget;


